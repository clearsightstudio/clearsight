#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'clearsight.rb'

class App
  include Methadone::Main
  include Methadone::CLILogging
  include Methadone::SH

  # Create command line options here. Don't forget to document
  # them below in the show_help method.
  main do |command, *args|
    case command.to_s.to_sym
    when :deploy then CS::Deploy.deploy(args)
    when :update then update
    when :help then show_help
    when :killrails then killrails(args.first || 3000)
    when :sshify then sshify(args.last || "id_rsa")
    else
      puts "Invalid command."
      show_help
    end
  end

  def self.show_help
    puts "USAGE:"
    puts "  deploy <setup>"
    puts "    Deploys or sets up deployment to a remote server. Replaces gitdeploysetup."
    puts "  killrails <port>"
    puts "    Kills a rails server running on the given port. Only works on Linux (so far)."
    puts "  sshify <host> <keyname>"
    puts "    Installs your SSH public key (id_rsa.pub unless you pass a different one) to a remote server (host)."
    puts "  update"
    puts "    Updates the gem. Same as `gem update clearsight`."
  end

  def self.update
    print "Updating."
    start_progress do
      sh "gem update clearsight"
    end
    puts "done."
  end
  
  def self.killrails(port)
    print "Killing Rails."
    start_progress do
      sh "fuser -n tcp -k #{port}"
    end
    puts "dead."
  end
  
  def self.sshify(host, keyname)
    print "Installing SSH key to remote server."
    start_progress do
      sh "cat ~/.ssh/#{keyname}.pub | ssh #{host} 'cat >> ~/.ssh/authorized_keys'"
    end
    puts "installed."
  end

  def self.start_progress
    @t = CS::Timer.new 0.5 do print "." end
    yield
    @t.stop
  end

  arg :args, :optional
  
  version Clearsight::VERSION

  use_log_level_option

  go!
end
